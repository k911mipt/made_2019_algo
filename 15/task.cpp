/*
# Задание 15. «Приближенное решение метрической неориентированной задачи коммивояжера».

Найдите приближенное решение метрической неориентированной задачи коммивояжера в 
полном графе (на плоскости) с помощью минимального остовного дерева.

Оцените качество приближения на случайном наборе точек, нормально распределенномна плоскости 
с дисперсией 1. Нормально распределенный набор точек получайте с помощью преобразования Бокса-Мюллера.

При фиксированном N, количестве вершин графа, несколько раз запустите оценку качества приближения.
Вычислите среднее значение и среднеквадратичное отклонение качества приближения для данного N.

Запустите данный эксперимент для всех N в некотором диапазоне, например, [2, 10].
Автоматизируйте запуск экспериментов.
В решении требуется разумно разделить код на файлы. Каждому классу - свой заголовочный файл и файл с реализацией.


*/

#include <iostream>
#include <fstream>
#include "memcheck_crt.h"
#include "binary_tree.h"


int main() {
    ENABLE_CRT;
    std::ifstream input_stream("input.txt");
    std::cin.rdbuf(input_stream.rdbuf());

    //int n = 0;
    //std::cin >> n;

    //BinaryTree<val_t> tree;
    //val_t val = 0;
    //for (int i = 0; i < n; ++i) {
    //    std::cin >> val;
    //    tree.Insert(val);
    //}

    //std::vector<val_t> container;
    //tree.GetPreOrderValues(container);
    //for (auto elem : container) {
    //    std::cout << elem << " ";
    //}

    return EXIT_SUCCESS;
}